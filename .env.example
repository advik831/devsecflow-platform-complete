# =====================================================
# DevOps Platform Configuration
# =====================================================

# Database Configuration
# Choose 'bundled' for Docker Compose PostgreSQL or 'external' for existing DB
DATABASE_MODE=bundled

# For bundled PostgreSQL (Docker Compose)
DB_HOST=db
DB_PORT=5432
DB_NAME=devops_platform
DB_USER=postgres
DB_PASSWORD=postgres
DB_SSL=false

# For external database (production/cloud)
# DATABASE_URL=postgresql://username:password@hostname:5432/database
# DB_HOST=your-db-host.com
# DB_PORT=5432
# DB_NAME=your_database_name
# DB_USER=your_username
# DB_PASSWORD=your_password
# DB_SSL=true

# Application Configuration
NODE_ENV=development
PORT=5000
SESSION_SECRET=your-super-secret-session-key-change-this-in-production

# Database Migrations
RUN_MIGRATIONS=true

# GitHub Integration (Optional)
# Leave empty to skip GitHub integration - users can connect after login
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=

# For GitHub OAuth App setup:
# 1. Go to GitHub Settings > Developer settings > OAuth Apps
# 2. Create New OAuth App
# 3. Set Authorization callback URL: http://localhost:5000/auth/github/callback
# 4. Copy Client ID and Client Secret here
# GITHUB_CLIENT_ID=your_github_client_id
# GITHUB_CLIENT_SECRET=your_github_client_secret

# Kubernetes Configuration (Optional)
# KUBERNETES_CONFIG=path/to/kubeconfig

# Cloud Provider Settings (Optional)
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_REGION=us-east-1

# GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account.json
# GOOGLE_CLOUD_PROJECT=your-project-id

# AZURE_SUBSCRIPTION_ID=
# AZURE_CLIENT_ID=
# AZURE_CLIENT_SECRET=
# AZURE_TENANT_ID=

# Security Settings
# CORS_ORIGIN=http://localhost:3000,https://yourdomain.com

# Logging
# LOG_LEVEL=info

# Development Settings
# VITE_API_URL=http://localhost:5000